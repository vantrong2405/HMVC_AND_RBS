module Sidekiq
  def self.configure_client: () { (Config config) -> void } -> void

  def self.configure_embed: () { (Config config) -> void } -> Embedded

  def self.configure_server: () { (Config config) -> void } -> void

  def self.default_configuration: () -> Config

  def self.default_job_options: () -> Hash[String, untyped]

  def self.default_job_options=: (Hash[String, untyped] hash) -> void

  def self.dump_json: (untyped object) -> untyped

  def self.ent?: () -> boolish

  def self.freeze!: () -> void

  def self.load_json: (string string) -> Hash[String, untyped]

  def self.logger: () -> Logger

  def self.pro?: () -> boolish

  def self.redis: () { (RedisClientAdapter redis_conn) -> void } -> RedisClientAdapter

  def self.redis_pool: () -> ConnectionPool[RedisClientAdapter]

  def self.server?: () -> boolish

  def self.strict_args!: (?untyped mode) -> untyped

  def self.transactional_push!: () -> bool

  def self.`❨╯°□°❩╯︵┻━┻`: () -> void

  LICENSE: ::String

  MAJOR: ::Integer

  NAME: ::String

  VERSION: ::String

  class Shutdown < ::Interrupt
  end
end
